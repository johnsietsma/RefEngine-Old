cmake_minimum_required(VERSION 2.8 FATAL_ERROR)

set(PROJECT_NAME RefEngine)
project(${PROJECT_NAME})


#TODO: I may be able to use this flag instead: gtest_force_shared_crt

# gtest stomps the CRT settings, so I stomp the test executeables in the same way so that it links correctly.
# Stealing googles code from: https://code.humavips.eu/svn/naorsb/tags/paris/RSBImageConverter/3rdparty/gtest-1.5.0/CMakeLists.txt
if (MSVC)
  # For MSVC, CMake sets certain flags to defaults we want to override.
  # This replacement code is taken from sample in the CMake Wiki at
  # http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.
  foreach (flag_var
           CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE
           CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
    # In hermetic build environments, tests may not have access to MS runtime
    # DLLs, so this replaces /MD (CRT libraries in DLLs) with /MT (static CRT
    # libraries).
    string(REPLACE "/MD" "-MT" ${flag_var} "${${flag_var}}")
    # We prefer more strict warning checking for building Google Test.
    # Replaces /W3 with /W4 in defaults.
    string(REPLACE "/W3" "-W4" ${flag_var} "${${flag_var}}")
  endforeach()
endif()
# end google's stomping code.

# Force glfw to use static libs
# Use this for fbx linking as well
if (MSVC)
    set(USE_MSVC_RUNTIME_LIBRARY_DLL OFF)
endif()

set(BUILD_SHARED_LIBS OFF)

add_subdirectory(dep/glfw)

add_subdirectory(RefEngine)
add_subdirectory(TestBed)

add_subdirectory(dep/gtest-1.7.0)
add_subdirectory(RefEngineTests)
